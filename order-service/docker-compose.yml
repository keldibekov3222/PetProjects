version: "3.8"
services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orders_db
    ports:
      - "5432:5432"

  mongodb:
    image: mongo:5
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  app:
    build: .
    container_name: order-service
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - mongodb
      - redis
      - kafka
    environment:
      - DB_HOST=postgres
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=orders_db
      - DB_PORT=5432
      - CONFIG_PATH=config/config.env
      - MONGO_URI=mongodb://user:password@mongodb:27017/orders_db?authSource=admin
      - MONGO_DB=orders_db
    volumes:
      - .:/app
      - ./config/config.env:/app/config/config.env

volumes:
  mongodb_data:
